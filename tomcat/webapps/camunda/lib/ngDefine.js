define("ngParse",[],function(){var u=/^module:([^:]*)(:(.*))?$/,a=/^ng/;return{parseNgModule:function(e,n){var t=[],l=[];return function e(n,o,r){var i;if(n)if("function"==typeof n)for(i in n)"prototype"!=i&&"length"!=i&&"name"!=i&&n.hasOwnProperty(i)&&o.call(r,n[i],i);else if(n.forEach&&n.forEach!==e)n.forEach(o,r);else if(isArrayLike(n))for(i=0;i<n.length;i++)o.call(r,n[i],i);else for(i in n)n.hasOwnProperty(i)&&o.call(r,n[i],i);return n}(n,function(e){var n,o,r,i=e.match(u);i?(n=i[1],(o=i[3])||(r=n,a.test(r))||(o=n.replace(/\./g,"/")),l.push(n),o&&t.push(o)):t.push(e)}),{name:e,fileDependencies:t,moduleDependencies:l}}}}),function(s){define("ngDefine",["angular","ngParse"],function(r,d){function f(e){return Array.prototype.slice.call(e,0)}function n(e,n,o){if(!n)throw new Error("wrong number of arguments, expected name[, dependencies], body");!function(e,n,o,r){r||(r=o,o=null);var i,t,l=d.parseNgModule(n,o||[]),u=l.moduleDependencies,a=l.fileDependencies;try{e.module(n),t=!0}catch(e){t=!1}if(u.length&&t)throw new Error("Cannot re-define angular module "+n+" with new dependencies ["+u+"]. Make sure the module is not defined else where or define a sub-module with additional angular module dependencies instead.");u.length||!t?(i=e.module(n,u),c(n,"defined with dependencies",u)):(i=e.module(n),c(n,"looked up")),define(a,function(){var e=f(arguments);return e.unshift(i),r.apply(s,e),c(n,"loaded"),i})}(r,e,n,o)}s.ngDefine||(s.ngDefine=n);var o,c=(Function.prototype.bind&&s.console&&s.console.log&&(o=Function.prototype.bind.call(s.console.log,s.console)),function(){var e;n.debug&&o&&((e=f(arguments)).unshift("[ngDefine]"),o.apply(o,e))});return n})}(window);